generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id          String      @id @default(uuid())
  name        String
  email       String      @unique
  imageUrl    String?
  role        String
  permissions String[]
  products    products[]  @relation("UserProducts")
  customers   customers[] @relation("UserCustomers")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model products {
  id          String       @id @default(uuid())
  name        String
  description String?
  imageUrl    String?
  category    String?
  stock       Int?
  price       Float
  userId      String
  ownerId     String[]
  user        users        @relation(fields: [userId], references: [id], name: "UserProducts")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  debts       debts[]
  debt_items  debt_items[]
}

model customers {
  id        String   @id @default(uuid())
  name      String
  phone     String
  address   String?
  tcNo      String?
  email     String?
  userId    String
  user      users    @relation(fields: [userId], references: [id], name: "UserCustomers")
  debts     debts[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model debts {
  id         String          @id @default(uuid())
  customerId String
  customer   customers       @relation(fields: [customerId], references: [id])
  totalPrice Float
  paidAmount Float           @default(0)
  remaining  Float           @default(0)
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
  items      debt_items[]
  payments   debt_payments[]
  products   products?       @relation(fields: [productsId], references: [id])
  productsId String?
}

model debt_items {
  id        String @id @default(uuid())
  debtId    String
  productId String
  quantity  Int
  unitPrice Float
  total     Float

  debt    debts    @relation(fields: [debtId], references: [id])
  product products @relation(fields: [productId], references: [id])
}

model debt_payments {
  id     String   @id @default(uuid())
  debtId String
  amount Float
  date   DateTime @default(now())

  debt debts @relation(fields: [debtId], references: [id])
}
